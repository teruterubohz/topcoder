using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using System.Text.RegularExpressions;


public class RectangularGrid
{
	public long countRectangles(int width, int height)
	{
        long ret = 0;

        for( int i = 0; i<width; i++)
        {
            for( int j = 0; j<height; j++)
            {
                if (i == j) continue;
                ret += (width - i) * (height - j);
            }
        }

        return ret;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	#region Testing code generated by KawigiEdit
	[STAThread]
	private static Boolean KawigiEdit_RunTest(int testNum, int p0, int p1, Boolean hasAnswer, long p2) {
		Console.Write("Test " + testNum + ": [" + p0 + "," + p1);
		Console.WriteLine("]");
		RectangularGrid obj;
		long answer;
		obj = new RectangularGrid();
		DateTime startTime = DateTime.Now;
		answer = obj.countRectangles(p0, p1);
		DateTime endTime = DateTime.Now;
		Boolean res;
		res = true;
		Console.WriteLine("Time: " + (endTime - startTime).TotalSeconds + " seconds");
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			Console.WriteLine("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				Console.WriteLine("Desired answer:");
				Console.WriteLine("\t" + p2);
			}
			Console.WriteLine("Your answer:");
			Console.WriteLine("\t" + answer);
		} else if ((endTime - startTime).TotalSeconds >= 2) {
			Console.WriteLine("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			Console.WriteLine("Match :-)");
		} else {
			Console.WriteLine("OK, but is it right?");
		}
		Console.WriteLine("");
		return res;
	}
	public static void Main(string[] args) {
		Boolean all_right;
		Boolean disabled;
		Boolean tests_disabled;
		all_right = true;
		tests_disabled = false;
		
		int p0;
		int p1;
		long p2;
		
		// ----- test 0 -----
		disabled = false;
		p0 = 3;
		p1 = 3;
		p2 = 22L;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 1 -----
		disabled = false;
		p0 = 5;
		p1 = 2;
		p2 = 31L;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 2 -----
		disabled = false;
		p0 = 10;
		p1 = 10;
		p2 = 2640L;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 3 -----
		disabled = false;
		p0 = 1;
		p1 = 1;
		p2 = 0L;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 4 -----
		disabled = false;
		p0 = 592;
		p1 = 964;
		p2 = 81508708664L;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		if (all_right) {
			if (tests_disabled) {
				Console.WriteLine("You're a stud (but some test cases were disabled)!");
			} else {
				Console.WriteLine("You're a stud (at least on given cases)!");
			}
		} else {
			Console.WriteLine("Some of the test cases had errors.");
		}
	}
	#endregion
	// PROBLEM STATEMENT
	// Given the width and height of a rectangular grid, return the total number of rectangles (NOT counting squares) that can be found on this grid.
	// For example, width = 3, height = 3 (see diagram below):
	// 
	//  __ __ __
	// |__|__|__|
	// |__|__|__|
	// |__|__|__|
	// 
	// In this grid, there are 4 2x3 rectangles, 6 1x3 rectangles and 12 1x2 rectangles. Thus there is a total of 4 + 6 + 12 = 22 rectangles. Note we don't count 1x1, 2x2 and 3x3 rectangles because they are squares.
	// 
	// 
	// DEFINITION
	// Class:RectangularGrid
	// Method:countRectangles
	// Parameters:int, int
	// Returns:long
	// Method signature:long countRectangles(int width, int height)
	// 
	// 
	// NOTES
	// -rectangles with equals sides (squares) should not be counted.
	// 
	// 
	// CONSTRAINTS
	// -width and height will be between 1 and 1000 inclusive.
	// 
	// 
	// EXAMPLES
	// 
	// 0)
	// 3
	// 3
	// 
	// Returns: 22
	// 
	// See above
	// 
	// 1)
	// 5
	// 2
	// 
	// Returns: 31
	// 
	// 
	//  __ __ __ __ __
	// |__|__|__|__|__|
	// |__|__|__|__|__|
	// 
	// In this grid, there is one 2x5 rectangle, 2 2x4 rectangles, 2 1x5 rectangles, 3 2x3 rectangles, 4 1x4 rectangles, 6 1x3 rectangles and 13 1x2 rectangles. Thus there is a total of 1 + 2 + 2 + 3 + 4 + 6 + 13 = 31 rectangles.
	// 
	// 2)
	// 10
	// 10
	// 
	// Returns: 2640
	// 
	// 3)
	// 1
	// 1
	// 
	// Returns: 0
	// 
	// 4)
	// 592
	// 964
	// 
	// Returns: 81508708664
	// 
	// END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
