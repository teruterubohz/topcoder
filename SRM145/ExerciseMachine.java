import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;
import java.lang.Integer;

public class ExerciseMachine
{
	public int getPercentages(String time)
	{
		int res = 0;
		
		String array[] = time.split(":");
		int seconds = 3600 * Integer.parseInt(array[0]) + 60 * Integer.parseInt(array[1]) + Integer.parseInt(array[2]);
		
		for( int i = 1 ; i < 100 ; i++ )
		{
			if( seconds * i % 100 == 0 )
				res++;
		}
		
		return res;
	}
	

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		ExerciseMachine obj;
		int answer;
		obj = new ExerciseMachine();
		long startTime = System.currentTimeMillis();
		answer = obj.getPercentages(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + p1);
			}
			System.out.println("Your answer:");
			System.out.println("\t" + answer);
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;
		
		String p0;
		int p1;
		
		// ----- test 0 -----
		disabled = false;
		p0 = "00:30:00";
		p1 = 99;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 1 -----
		disabled = false;
		p0 = "00:28:00";
		p1 = 19;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 2 -----
		disabled = false;
		p0 = "23:59:59";
		p1 = 0;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 3 -----
		disabled = false;
		p0 = "00:14:10";
		p1 = 49;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 4 -----
		disabled = false;
		p0 = "00:19:16";
		p1 = 3;
		all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// PROBLEM STATEMENT
	// 
	// You are writing firmware for an exercise machine.  Each second, a routine in your firmware is called which decides whether it should display the percentage of the workout completed.  The display does not have any ability to show decimal points, so the routine should only display a percentage if the second it is called results in a whole percentage of the total workout.
	// 
	// 
	// 
	// Given a String time representing how long the workout lasts, in the format "hours:minutes:seconds", return the number of times a percentage will be displayed by the routine.  The machine should never display 0% or 100%.
	// 
	// 
	// DEFINITION
	// Class:ExerciseMachine
	// Method:getPercentages
	// Parameters:String
	// Returns:int
	// Method signature:int getPercentages(String time)
	// 
	// 
	// CONSTRAINTS
	// -time will be a String formatted as "HH:MM:SS", HH = hours, MM = minutes, SS = seconds.
	// -The hours portion of time will be an integer with exactly two digits, with a value between 00 and 23, inclusive.
	// -The minutes portion of time will be an integer with exactly two digits, with a value between 00 and 59, inclusive.
	// -The seconds portion of time will be an integer with exactly two digits, with a value between 00 and 59, inclusive
	// -time will not be "00:00:00".
	// 
	// 
	// EXAMPLES
	// 
	// 0)
	// "00:30:00"
	// 
	// Returns: 99
	// 
	// The standard 30 minute workout.  Each one percent increment can be displayed every 18 seconds.
	// 
	// 1)
	// "00:28:00"
	// 
	// Returns: 19
	// 
	// The 28 minute workout.  The user completes 5 percent of the workout every 1 minute, 24 seconds.
	// 
	// 2)
	// "23:59:59"
	// 
	// Returns: 0
	// 
	// This is the longest workout possible, given the constraints.  No percentages are ever displayed on the screen.
	// 
	// 3)
	// "00:14:10"
	// 
	// Returns: 49
	// 
	// 4)
	// "00:19:16"
	// 
	// Returns: 3
	// 
	// END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
